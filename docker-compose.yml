version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.api-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    depends_on:
      - rabbitmq
      - auth-service
      - charger-service
      - transaction-service
      - email-service
    networks:
      - microservices-network

  auth-service:
    build:
      context: .
      dockerfile: Dockerfile.auth-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  charger-service:
    build:
      context: .
      dockerfile: Dockerfile.charger-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - PORT=3002
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  transaction-service:
    build:
      context: .
      dockerfile: Dockerfile.transaction-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=production
      - PORT=3003
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  email-service:
    build:
      context: .
      dockerfile: Dockerfile.email-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=production
      - PORT=3004
    depends_on:
      - rabbitmq
    networks:
      - microservices-network

  web-portal:
    build:
      context: .
      dockerfile: Dockerfile.web-portal
    ports:
      - "4200:3000"
    environment:
      - NODE_ENV=production
    networks:
      - microservices-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  rabbitmq_data:
